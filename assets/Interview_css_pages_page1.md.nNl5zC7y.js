import{_ as l,a as o,o as a,b0 as i}from"./chunks/framework.BBy0ZaTh.js";const u=JSON.parse('{"title":"flex","description":"","frontmatter":{},"headers":[],"relativePath":"Interview/css/pages/page1.md","filePath":"Interview/css/pages/page1.md","lastUpdated":1752408143000}'),c={name:"Interview/css/pages/page1.md"};function d(t,e,r,s,n,f){return a(),o("div",null,e[0]||(e[0]=[i('<h1 id="flex" tabindex="-1">flex <a class="header-anchor" href="#flex" aria-label="Permalink to &quot;flex&quot;">​</a></h1><blockquote><p><code>Flex</code> 是 <code>Flexible Box</code> 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性。任何一个容器都可以指定为 <code>Flex</code> 布局。行内元素也可以使用 <code>Flex</code> 布局。<code>display: inline-flex;</code></p></blockquote><h2 id="容器属性" tabindex="-1">容器属性 <a class="header-anchor" href="#容器属性" aria-label="Permalink to &quot;容器属性&quot;">​</a></h2><h3 id="flex-direction-主轴方向" tabindex="-1">flex-direction 主轴方向 <a class="header-anchor" href="#flex-direction-主轴方向" aria-label="Permalink to &quot;flex-direction 主轴方向&quot;">​</a></h3><ul><li><code>flex-direction：</code>属性决定主轴的方向（即项目的排列方向）</li></ul><div class="tip custom-block"><p class="custom-block-title">flex-direction属性的4个值</p><ul><li>row（默认值）：主轴为水平方向，起点在左端。</li><li>row-reverse：主轴为水平方向，起点在右端。</li><li>column：主轴为垂直方向，起点在上沿。</li><li>column-reverse：主轴为垂直方向，起点在下沿。</li></ul></div><h3 id="flex-wrap-如何换行" tabindex="-1">flex-wrap 如何换行 <a class="header-anchor" href="#flex-wrap-如何换行" aria-label="Permalink to &quot;flex-wrap 如何换行&quot;">​</a></h3><ul><li><code>flex-wrap：</code>默认情况下，项目都排在一条线（又称&quot;轴线&quot;）上。<code>flex-wrap</code>属性定义，如果一条轴线排不下，如何换行</li></ul><div class="tip custom-block"><p class="custom-block-title">flex-wrap属性的3个值</p><ul><li>nowrap （默认值）：不换行。</li><li>wrap：换行，第一行在上方。</li><li>wrap-reverse：换行，第一行在下方。</li></ul></div><h3 id="flex-flow-前两个简写" tabindex="-1">flex-flow 前两个简写 <a class="header-anchor" href="#flex-flow-前两个简写" aria-label="Permalink to &quot;flex-flow 前两个简写&quot;">​</a></h3><ul><li><code>flex-flow：</code> <code>flex-direction</code>属性和<code>flex-wrap</code>属性的简写形式，默认值为<code>row nowrap</code></li><li><code>justify-content：</code>项目在主轴上的对齐方式</li><li><code>align-items：</code>项目在交叉轴上如何对齐</li><li><code>align-content：</code>多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用</li></ul><h2 id="项目属性" tabindex="-1">项目属性 <a class="header-anchor" href="#项目属性" aria-label="Permalink to &quot;项目属性&quot;">​</a></h2><ul><li><code>order：</code>项目的排列顺序。数值越小，排列越靠前，默认为0</li><li><code>flex-grow：</code>项目的放大比例，默认为0，即如果存在剩余空间，也不放大</li><li><code>flex-shrink：</code>项目的缩小比例，默认为1，即如果空间不足，该项目将缩小</li><li><code>flex-basis：</code>在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小</li><li><code>flex：</code> <code>flex-grow</code>, <code>flex-shrink</code> 和 <code>flex-basis</code>的简写，默认值为0 1 auto。后两个属性可选</li><li><code>align-self：</code>允许单个项目有与其他项目不一样的对齐方式，可覆盖<code>align-items</code>属性。默认值为<code>auto</code>，表示继承父元素的<code>align-items</code>属性，如果没有父元素，则等同于<code>stretch</code></li></ul>',13)]))}const p=l(c,[["render",d]]);export{u as __pageData,p as default};
