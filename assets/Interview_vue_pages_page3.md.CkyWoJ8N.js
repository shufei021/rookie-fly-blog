import{_ as a,a as t,o as l,b0 as o}from"./chunks/framework.BBy0ZaTh.js";const p=JSON.parse('{"title":"vue3和vue2的区别","description":"","frontmatter":{},"headers":[],"relativePath":"Interview/vue/pages/page3.md","filePath":"Interview/vue/pages/page3.md","lastUpdated":1751439771000}'),r={name:"Interview/vue/pages/page3.md"};function i(u,e,d,n,c,s){return l(),t("div",null,e[0]||(e[0]=[o('<h1 id="vue3和vue2的区别" tabindex="-1">vue3和vue2的区别 <a class="header-anchor" href="#vue3和vue2的区别" aria-label="Permalink to &quot;vue3和vue2的区别&quot;">​</a></h1><h2 id="双向绑定" tabindex="-1">双向绑定 <a class="header-anchor" href="#双向绑定" aria-label="Permalink to &quot;双向绑定&quot;">​</a></h2><ul><li><code>双向绑定的方法不一样</code>： Vue3 使用了new Proxy，Vue2 使用了Object.defineProperty</li></ul><ul><li><code>响应式系统提升</code>：Vue3中响应式数据原理改成proxy，可监听动态新增删除属性，以及数组变化</li></ul><h2 id="代码组织" tabindex="-1">代码组织 <a class="header-anchor" href="#代码组织" aria-label="Permalink to &quot;代码组织&quot;">​</a></h2><ul><li><code>Vue2</code> 是选项式 API，Vue3 向下兼容，可以是 选项式 也可以 是组合式，语法糖 setup</li></ul><h2 id="编译优化" tabindex="-1">编译优化 <a class="header-anchor" href="#编译优化" aria-label="Permalink to &quot;编译优化&quot;">​</a></h2><ul><li><code>编译优化</code>：vue2通过标记静态根节点优化diff，Vue3 标记和提升所有静态根节点，diff的时候只需要对比动态节点内容</li></ul><h2 id="打包体积优化" tabindex="-1">打包体积优化 <a class="header-anchor" href="#打包体积优化" aria-label="Permalink to &quot;打包体积优化&quot;">​</a></h2><ul><li><code>打包体积优化</code>：移除了一些不常用的api（inline-template、filter）</li></ul><h2 id="生命周期的变化" tabindex="-1">生命周期的变化 <a class="header-anchor" href="#生命周期的变化" aria-label="Permalink to &quot;生命周期的变化&quot;">​</a></h2><ul><li>beforeDestroy -&gt; beforeUnmount,destroyed -&gt; unmounted</li><li>beforeCreate 和 created 被 setup() 函数本身替代</li></ul><h2 id="其它" tabindex="-1">其它 <a class="header-anchor" href="#其它" aria-label="Permalink to &quot;其它&quot;">​</a></h2><ul><li><code>$set</code> 在Vue3中没有，因为 <code>new Proxy</code> 不需要</li></ul><ul><li><code>Vue2</code> v-for 优先级大于 v-if，Vue3 是 v-if 大于 v-for</li><li><code>源码组织方式变化</code>：使用 TS 重写</li><li><code>Vue3</code> 的 template 模板支持多个根标签</li><li>Vuex状态管理：创建实例的方式改变,Vue2为new Store , Vue3为createStore</li><li>Route 获取页面实例与路由信息：vue2通过this获取router实例，vue3通过使用 getCurrentInstance/ userRoute和userRouter方法获取当前组件实例</li><li>Props 的使用变化：vue2 通过 this 获取 props 里面的内容，vue3 直接通过 props</li><li>父子组件传值：vue3 在向父组件传回数据时，如使用的自定义名称，如 backData，则需要在 emits 中定义一下</li></ul>',15)]))}const f=a(r,[["render",i]]);export{p as __pageData,f as default};
