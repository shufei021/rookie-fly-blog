import{_ as t,a as r,o as s,b as e,f as n}from"./chunks/framework.BBy0ZaTh.js";const m=JSON.parse('{"title":"在 Vue2.x 中如何检测数组的变化","description":"","frontmatter":{},"headers":[],"relativePath":"Interview/vue/pages/page5.md","filePath":"Interview/vue/pages/page5.md","lastUpdated":1750206274000}'),o={name:"Interview/vue/pages/page5.md"};function p(d,a,i,l,u,c){return s(),r("div",null,a[0]||(a[0]=[e("h1",{id:"在-vue2-x-中如何检测数组的变化",tabindex:"-1"},[n("在 Vue2.x 中如何检测数组的变化 "),e("a",{class:"header-anchor",href:"#在-vue2-x-中如何检测数组的变化","aria-label":'Permalink to "在 Vue2.x 中如何检测数组的变化"'},"​")],-1),e("p",null,"使用了函数劫持的方式，重写了数组的方法，Vue将data中的数组进行了原型链重写，指向了自己定义的数组原型方法。这样当调用数组api时，可以通知依赖更新。如果数组中包含着引用类型，会对数组中的引用类型再次递归遍历进行监控。这样就实现了监测数组变化。",-1)]))}const v=t(o,[["render",p]]);export{m as __pageData,v as default};
