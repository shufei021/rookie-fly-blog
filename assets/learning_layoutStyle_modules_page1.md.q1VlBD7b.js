import{_ as i,a,o as e,b0 as t}from"./chunks/framework.BBy0ZaTh.js";const k=JSON.parse('{"title":"flex","description":"","frontmatter":{},"headers":[],"relativePath":"learning/layoutStyle/modules/page1.md","filePath":"learning/layoutStyle/modules/page1.md","lastUpdated":1752457654000}'),l={name:"learning/layoutStyle/modules/page1.md"};function n(h,s,d,p,r,o){return e(),a("div",null,s[0]||(s[0]=[t('<h1 id="flex" tabindex="-1">flex <a class="header-anchor" href="#flex" aria-label="Permalink to &quot;flex&quot;">​</a></h1><p>在前端开发中，<code>flex</code>（弹性盒子布局，Flexbox）是一种现代的、高效的 CSS 布局模型，特别适合用于一维布局（即行或列）。它简化了在不同屏幕尺寸和设备上对齐、分布和排列元素的方式，是响应式设计的重要工具。</p><hr><h3 id="一、flex-布局的基本概念" tabindex="-1">一、Flex 布局的基本概念 <a class="header-anchor" href="#一、flex-布局的基本概念" aria-label="Permalink to &quot;一、Flex 布局的基本概念&quot;">​</a></h3><p>Flex 布局由 <strong>容器（flex container）</strong> 和 <strong>项目（flex items）</strong> 组成：</p><ul><li><strong>Flex 容器（Flex Container）</strong>：通过设置 <code>display: flex</code> 或 <code>display: inline-flex</code> 的元素。</li><li><strong>Flex 项目（Flex Items）</strong>：容器的直接子元素。</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h3 id="二、flex-容器的主要属性" tabindex="-1">二、Flex 容器的主要属性 <a class="header-anchor" href="#二、flex-容器的主要属性" aria-label="Permalink to &quot;二、Flex 容器的主要属性&quot;">​</a></h3><h4 id="_1-flex-direction" tabindex="-1">1. <code>flex-direction</code> <a class="header-anchor" href="#_1-flex-direction" aria-label="Permalink to &quot;1. `flex-direction`&quot;">​</a></h4><p>定义主轴方向（即项目的排列方向）</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-direction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: row | </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">row-reverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | column | </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">column-reverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><ul><li><code>row</code>（默认）：从左到右水平排列</li><li><code>row-reverse</code>：从右到左</li><li><code>column</code>：从上到下垂直排列</li><li><code>column-reverse</code>：从下到上</li></ul><hr><h4 id="_2-flex-wrap" tabindex="-1">2. <code>flex-wrap</code> <a class="header-anchor" href="#_2-flex-wrap" aria-label="Permalink to &quot;2. `flex-wrap`&quot;">​</a></h4><p>定义项目是否换行</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: nowrap | wrap | </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">wrap-reverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><ul><li><code>nowrap</code>（默认）：不换行</li><li><code>wrap</code>：换行</li><li><code>wrap-reverse</code>：换行但方向相反</li></ul><hr><h4 id="_3-justify-content" tabindex="-1">3. <code>justify-content</code> <a class="header-anchor" href="#_3-justify-content" aria-label="Permalink to &quot;3. `justify-content`&quot;">​</a></h4><p>定义主轴上的对齐方式</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">justify-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">space-between</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">space-around</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">space-evenly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><ul><li><code>flex-start</code>（默认）：左对齐</li><li><code>center</code>：居中</li><li><code>space-between</code>：两端对齐，项目之间间距相等</li><li><code>space-around</code>：项目周围间距相等</li></ul><hr><h4 id="_4-align-items" tabindex="-1">4. <code>align-items</code> <a class="header-anchor" href="#_4-align-items" aria-label="Permalink to &quot;4. `align-items`&quot;">​</a></h4><p>定义交叉轴上的对齐方式（适用于所有项目）</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">align-items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: stretch | </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | baseline;</span></span></code></pre></div><ul><li><code>stretch</code>（默认）：拉伸填满容器</li><li><code>center</code>：居中</li><li><code>flex-start</code>：顶部对齐</li><li><code>flex-end</code>：底部对齐</li></ul><hr><h4 id="_5-align-content" tabindex="-1">5. <code>align-content</code> <a class="header-anchor" href="#_5-align-content" aria-label="Permalink to &quot;5. `align-content`&quot;">​</a></h4><p>多行项目在交叉轴上的对齐方式（仅在换行时生效）</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">align-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: stretch | </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">space-between</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">space-around</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><hr><h3 id="三、flex-项目的主要属性" tabindex="-1">三、Flex 项目的主要属性 <a class="header-anchor" href="#三、flex-项目的主要属性" aria-label="Permalink to &quot;三、Flex 项目的主要属性&quot;">​</a></h3><h4 id="_1-order" tabindex="-1">1. <code>order</code> <a class="header-anchor" href="#_1-order" aria-label="Permalink to &quot;1. `order`&quot;">​</a></h4><p>定义项目的排列顺序，默认是 0，数值越小越靠前</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">order: &lt;integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><hr><h4 id="_2-flex-grow" tabindex="-1">2. <code>flex-grow</code> <a class="header-anchor" href="#_2-flex-grow" aria-label="Permalink to &quot;2. `flex-grow`&quot;">​</a></h4><p>定义项目的放大比例，默认为 0（不放大）</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-grow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 1; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 项目将填满剩余空间 */</span></span></code></pre></div><hr><h4 id="_3-flex-shrink" tabindex="-1">3. <code>flex-shrink</code> <a class="header-anchor" href="#_3-flex-shrink" aria-label="Permalink to &quot;3. `flex-shrink`&quot;">​</a></h4><p>定义项目的缩小比例，默认为 1（空间不足时会缩小）</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-shrink</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 0; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 不缩小 */</span></span></code></pre></div><hr><h4 id="_4-flex-basis" tabindex="-1">4. <code>flex-basis</code> <a class="header-anchor" href="#_4-flex-basis" aria-label="Permalink to &quot;4. `flex-basis`&quot;">​</a></h4><p>定义在分配多余空间之前，项目占据的主轴空间</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-basis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: auto | &lt;length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><ul><li><code>auto</code>：根据 width/height 属性决定大小</li><li>可以设置固定值如 <code>200px</code></li></ul><hr><h4 id="_5-flex-推荐使用简写" tabindex="-1">5. <code>flex</code>（推荐使用简写） <a class="header-anchor" href="#_5-flex-推荐使用简写" aria-label="Permalink to &quot;5. `flex`（推荐使用简写）&quot;">​</a></h4><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex: &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-grow</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-shrink</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-basis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>常用简写：</p><ul><li><code>flex: 1</code> → <code>flex: 1 1 0%</code></li><li><code>flex: auto</code> → <code>flex: 1 1 auto</code></li><li><code>flex: none</code> → <code>flex: 0 0 auto</code></li></ul><hr><h3 id="四、常见应用场景-面试常问" tabindex="-1">四、常见应用场景（面试常问） <a class="header-anchor" href="#四、常见应用场景-面试常问" aria-label="Permalink to &quot;四、常见应用场景（面试常问）&quot;">​</a></h3><table tabindex="0"><thead><tr><th>场景</th><th>解法</th></tr></thead><tbody><tr><td>水平垂直居中</td><td><code>display: flex; justify-content: center; align-items: center</code></td></tr><tr><td>等宽等高布局</td><td>使用 <code>flex: 1</code> 或 <code>flex-grow: 1</code></td></tr><tr><td>响应式导航栏</td><td>使用 <code>flex-wrap: wrap</code> 配合媒体查询</td></tr><tr><td>自适应间距</td><td>使用 <code>gap</code> 属性（CSS Grid 也支持）</td></tr><tr><td>左右结构（如页眉页脚）</td><td>使用 <code>justify-content: space-between</code></td></tr></tbody></table><hr><h3 id="五、flex-与-grid-的区别-扩展" tabindex="-1">五、Flex 与 Grid 的区别（扩展） <a class="header-anchor" href="#五、flex-与-grid-的区别-扩展" aria-label="Permalink to &quot;五、Flex 与 Grid 的区别（扩展）&quot;">​</a></h3><table tabindex="0"><thead><tr><th>特性</th><th>Flexbox</th><th>CSS Grid</th></tr></thead><tbody><tr><td>布局维度</td><td>一维（行或列）</td><td>二维（行和列）</td></tr><tr><td>适合场景</td><td>项目排列、对齐</td><td>复杂页面布局</td></tr><tr><td>控制粒度</td><td>项目级控制</td><td>区域级控制</td></tr><tr><td>兼容性</td><td>较好</td><td>现代浏览器支持良好</td></tr></tbody></table><hr><h3 id="六、面试题示例" tabindex="-1">六、面试题示例 <a class="header-anchor" href="#六、面试题示例" aria-label="Permalink to &quot;六、面试题示例&quot;">​</a></h3><h4 id="问题-1-如何实现一个水平垂直居中的-div" tabindex="-1">问题 1：如何实现一个水平垂直居中的 div？ <a class="header-anchor" href="#问题-1-如何实现一个水平垂直居中的-div" aria-label="Permalink to &quot;问题 1：如何实现一个水平垂直居中的 div？&quot;">​</a></h4><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  justify-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  align-items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h4 id="问题-2-flex-1-是什么意思" tabindex="-1">问题 2：flex: 1 是什么意思？ <a class="header-anchor" href="#问题-2-flex-1-是什么意思" aria-label="Permalink to &quot;问题 2：flex: 1 是什么意思？&quot;">​</a></h4><p>等价于 <code>flex: 1 1 0%</code>，表示项目将等比例放大以填满容器，不缩小。</p><hr><h4 id="问题-3-flex-wrap-是干什么的" tabindex="-1">问题 3：flex-wrap 是干什么的？ <a class="header-anchor" href="#问题-3-flex-wrap-是干什么的" aria-label="Permalink to &quot;问题 3：flex-wrap 是干什么的？&quot;">​</a></h4><p>控制项目是否换行。默认不换行（<code>nowrap</code>），设置为 <code>wrap</code> 时会根据容器大小自动换行。</p><hr><h3 id="七、注意事项" tabindex="-1">七、注意事项 <a class="header-anchor" href="#七、注意事项" aria-label="Permalink to &quot;七、注意事项&quot;">​</a></h3><ul><li>Flex 布局只对直接子元素生效（不嵌套）</li><li>不适用于复杂的二维布局，建议用 CSS Grid</li><li><code>flex</code> 属性不能用于 <code>display: inline</code> 元素</li><li>使用 <code>gap</code> 属性时注意兼容性（IE 不支持）</li></ul>',74)]))}const g=i(l,[["render",n]]);export{k as __pageData,g as default};
