import{_ as o,a as t,o as r,b0 as a}from"./chunks/framework.D10JOWeE.js";const g=JSON.parse('{"title":"Vue2 和 Vue3 的区别","description":"","frontmatter":{},"headers":[],"relativePath":"learning/vue/modules/page5.md","filePath":"learning/vue/modules/page5.md","lastUpdated":1753172304000}'),n={name:"learning/vue/modules/page5.md"};function s(l,e,i,d,u,c){return r(),t("div",null,e[0]||(e[0]=[a('<h1 id="vue2-和-vue3-的区别" tabindex="-1">Vue2 和 Vue3 的区别 <a class="header-anchor" href="#vue2-和-vue3-的区别" aria-label="Permalink to &quot;Vue2 和 Vue3 的区别&quot;">​</a></h1><p>Vue3 相对于 Vue2 做了较大的改进，主要体现在以下几个方面：</p><hr><h4 id="✅-1-组合式-api-vs-选项式-api" tabindex="-1">✅ 1. <strong>组合式 API vs 选项式 API</strong> <a class="header-anchor" href="#✅-1-组合式-api-vs-选项式-api" aria-label="Permalink to &quot;✅ 1. **组合式 API vs 选项式 API**&quot;">​</a></h4><ul><li><strong>Vue2</strong> 使用 Options API（如 <code>data</code>、<code>methods</code>、<code>computed</code> 等）组织代码，逻辑分散，不易复用。</li><li><strong>Vue3</strong> 引入了 Composition API（如 <code>setup()</code>、<code>ref</code>、<code>reactive</code>、<code>watch</code> 等），更灵活，更适合逻辑复用和大型项目的维护。</li></ul><hr><h4 id="✅-2-性能优化" tabindex="-1">✅ 2. <strong>性能优化</strong> <a class="header-anchor" href="#✅-2-性能优化" aria-label="Permalink to &quot;✅ 2. **性能优化**&quot;">​</a></h4><ul><li><strong>更快的虚拟 DOM</strong>：Vue3 重写了虚拟 DOM，实现更快的 diff 算法。</li><li><strong>编译优化</strong>：静态提升、事件缓存等机制使渲染更高效。</li><li><strong>Tree-shaking 支持</strong>：Vue3 使用 ES Module 编写，可以按需引入，减小打包体积。</li></ul><hr><h4 id="✅-3-响应式系统升级" tabindex="-1">✅ 3. <strong>响应式系统升级</strong> <a class="header-anchor" href="#✅-3-响应式系统升级" aria-label="Permalink to &quot;✅ 3. **响应式系统升级**&quot;">​</a></h4><ul><li><strong>Vue2</strong> 使用 <code>Object.defineProperty</code>，不支持对数组、新增属性的完全监测。</li><li><strong>Vue3</strong> 改用 <code>Proxy</code> 实现响应式，更彻底、性能更好，支持更复杂的数据结构。</li></ul><hr><h4 id="✅-4-fragment-teleport-suspense-支持" tabindex="-1">✅ 4. <strong>Fragment / Teleport / Suspense 支持</strong> <a class="header-anchor" href="#✅-4-fragment-teleport-suspense-支持" aria-label="Permalink to &quot;✅ 4. **Fragment / Teleport / Suspense 支持**&quot;">​</a></h4><ul><li><strong>Fragment</strong>：Vue3 组件可以返回多个根节点，Vue2 不支持。</li><li><strong>Teleport</strong>：可以将组件渲染到 DOM 的任意位置，适合弹窗等场景。</li><li><strong>Suspense</strong>：用于异步组件的加载状态处理，配合 <code>&lt;script setup&gt;</code> 更加简洁。</li></ul><hr><h4 id="✅-5-typescript-支持更好" tabindex="-1">✅ 5. <strong>TypeScript 支持更好</strong> <a class="header-anchor" href="#✅-5-typescript-支持更好" aria-label="Permalink to &quot;✅ 5. **TypeScript 支持更好**&quot;">​</a></h4><ul><li>Vue3 是用 TypeScript 重写的，原生支持类型推导和开发体验，Vue2 对 TypeScript 支持较弱。</li></ul><hr><h4 id="✅-6-生命周期钩子不同" tabindex="-1">✅ 6. <strong>生命周期钩子不同</strong> <a class="header-anchor" href="#✅-6-生命周期钩子不同" aria-label="Permalink to &quot;✅ 6. **生命周期钩子不同**&quot;">​</a></h4><ul><li>Composition API 下生命周期名称为 <code>onMounted</code>、<code>onUnmounted</code> 等，更接近函数语义。</li><li>而 Vue2 是 <code>mounted</code>、<code>destroyed</code> 等选项式 API。</li><li>vue3中 beforeDestroy-&gt;onBeforeUnmounted, destroyed-&gt;onUnmounted</li><li>beforeCreate、created 被语法糖 setup 替代</li></ul>',20)]))}const h=o(n,[["render",s]]);export{g as __pageData,h as default};
